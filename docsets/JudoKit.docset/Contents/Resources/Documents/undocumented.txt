CardInputField.swift
	@objc public func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool
	override public func placeholder() -> NSAttributedString?
	override public func containsLogo() -> Bool
	override public func logoView() -> CardLogoView?
	override public func title() -> String
	override public func hintLabelText() -> String
DateInputField.swift
	public func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool
	public func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int
	public func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int
	public func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String?
	public func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int)
	override public func textFieldDidChangeValue(textField: UITextField)
	override public func placeholder() -> NSAttributedString?
	override public func title() -> String
	override public func hintLabelText() -> String
JudoPayInputField.swift
	public func didChangeInputText()
	public func textFieldDidChangeValue(textField: UITextField)
	public func placeholder() -> NSAttributedString?
	public func containsLogo() -> Bool
	public func logoView() -> CardLogoView?
	public func title() -> String
	public func titleWidth() -> Int
	public func hintLabelText() -> String
TransactionType+Title.swift
	public func title() -> String
SecurityInputField.swift
	public func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool
	override public func textFieldDidChangeValue(textField: UITextField)
	override public func placeholder() -> NSAttributedString?
	override public func containsLogo() -> Bool
	override public func logoView() -> CardLogoView?
	override public func title() -> String
	override public func hintLabelText() -> String
CardLogoView.swift
	public enum CardLogoType
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	case Visa, MasterCard, AMEX, Maestro, CIDV, CVC, Unknown
	public class CardLogoView: UIView
	public var type: CardLogoType = .Unknown
	public required init(type: CardLogoType = .Unknown)
	public required init?(coder aDecoder: NSCoder)
	public override func drawRect(rect: CGRect)
	public func drawCardUnknown()
	public func drawCardMasterCard()
	public func drawCardMaestro()
	public func drawCardAmex()
	public func drawCardCVC()
	public func drawCardCIDV()
	public func drawCardVisa()
PostCodeInputField.swift
	public func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool
	override public func textFieldDidChangeValue(textField: UITextField)
	override public func title() -> String
	override public func titleWidth() -> Int
JudoPayViewController.swift
	override public var view: UIView!
	override public func viewDidLoad()
	public override func viewDidAppear(animated: Bool)
	public func webView(webView: UIWebView, shouldStartLoadWithRequest request: NSURLRequest, navigationType: UIWebViewNavigationType) -> Bool
	public func webViewDidFinishLoad(webView: UIWebView)
JudoInputType.swift
	public protocol JudoInputType
IssueNumberInputField.swift
	public func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool
	override public func textFieldDidChangeValue(textField: UITextField)
	override public func placeholder() -> NSAttributedString?
	override public func title() -> String
	override public func hintLabelText() -> String
BillingCountryInputField.swift
	override public func title() -> String
	override public func titleWidth() -> Int
	public func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String) -> Bool
	public func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int
	public func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int
	public func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String?
	public func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int)
JudoPayView.swift
	public class JudoPayView: UIView, JudoPayInputDelegate
	public let contentView: UIScrollView =
	public init(type: TransactionType, cardDetails: CardDetails? = nil)
	required public init?(coder aDecoder: NSCoder)
	public func cardInput(input: CardInputField, error: JudoError)
	public func cardInput(input: CardInputField, didFindValidNumber cardNumberString: String)
	public func cardInput(input: CardInputField, didDetectNetwork network: CardNetwork)
	public func dateInput(input: DateInputField, error: JudoError)
	public func dateInput(input: DateInputField, didFindValidDate date: String)
	public func issueNumberInputDidEnterCode(inputField: IssueNumberInputField, issueNumber: String)
	public func billingCountryInputDidEnter(input: BillingCountryInputField, billingCountry: BillingCountry)
	public func judoPayInput(input: JudoPayInputField, isValid: Bool)
	public func judoPayInputDidChangeText(input: JudoPayInputField)
